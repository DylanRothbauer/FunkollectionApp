@page "/CreatePop"
@rendermode InteractiveServer
@inject IPopService PopService
@inject NavigationManager Navigation

@using System.Threading.Tasks
@using FunkollectionApp.Models
@using FunkollectionApp.Services
@using Microsoft.AspNetCore.Components.Forms
@using System.IO
@using MudBlazor

<MudThemeProvider Theme="MyFormTheme" />

<h3>Create Pop</h3>

<EditForm Model="@newPop" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <!-- Display current or selected image -->
                    @if (temporaryImageData != null)
                    {
                        <img src="@GetImageUrl()" alt="Current Image" style="max-width: 100%; height: auto;" />
                    }
                    else
                    {
                        <img src="/images/image-placeholder.jpg" alt="Placeholder Image" style="max-width: 100%; height: auto;" />
                    }

                    <!-- Image Upload -->
                    <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles">
                        <ActivatorContent>
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.CloudUpload">
                                Upload Image
                            </MudButton>
                        </ActivatorContent>
                    </MudFileUpload>

                    <MudTextField Label="Number" @bind-Value="newPop.Number" For="@(() => newPop.Number)" HelperText="Enter the Pop number" Required="true" />
                    <MudTextField Label="Title" @bind-Value="newPop.Title" For="@(() => newPop.Title)" HelperText="Enter the Pop title" Required="true" Class="mt-3" />
                    <MudTextField Label="Name" @bind-Value="newPop.Name" For="@(() => newPop.Name)" HelperText="Enter the Pop name" Required="true" Class="mt-3" />
                    <MudTextField Label="Category" @bind-Value="newPop.Category" For="@(() => newPop.Category)" HelperText="Enter the Pop category" Required="false" Class="mt-3" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Class="ml-auto funkollection-secondary">Create</MudButton>
                    <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Error" Class="ml-auto" @onclick="() => NavigateToPops()">Cancel</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    private Pop newPop = new Pop();
    private byte[] temporaryImageData; // Temporary storage for the uploaded image data

    private async Task OnValidSubmit()
    {
        if (temporaryImageData != null)
        {
            newPop.ImageData = temporaryImageData;
        }

        await PopService.AddEntityAsync(newPop);

        Navigation.NavigateTo("/Pops");
    }

    private void NavigateToPops()
    {
        Navigation.NavigateTo("/Pops");
    }

    private async void UploadFiles(IBrowserFile file)
    {
        using (var stream = new MemoryStream())
        {
            await file.OpenReadStream().CopyToAsync(stream);
            temporaryImageData = stream.ToArray(); // Store the uploaded file's data
        }

        // Trigger a UI update to show the newly uploaded image
        StateHasChanged();
    }

    private string GetImageUrl()
    {
        // Convert the byte array to a Base64 string
        if (temporaryImageData != null && temporaryImageData.Length > 0)
        {
            var base64 = Convert.ToBase64String(temporaryImageData);
            return $"data:image/png;base64,{base64}";
        }

        // Use placeholder if no image is available
        return "/images/image-placeholder.jpg";
    }

    MudTheme MyFormTheme = new MudTheme()
        {
            PaletteLight = new PaletteLight()
            {
                Primary = "#086a2e",
                Secondary = "#8abf52",
            },
        };
}
